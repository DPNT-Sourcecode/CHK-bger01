plugins {
	id 'application'
	id 'java'
	id 'eclipse'
    id 'jacoco'
    
    // Adds @Data and @Slf4j
    // https://mvnrepository.com/artifact/io.freefair.lombok/io.freefair.lombok.gradle.plugin
    id "io.freefair.lombok" version "5.1.1"
}

//noinspection GroovyUnusedAssignment
sourceCompatibility = 1.8
group 'io.befaster'

repositories {
    mavenLocal()
    mavenCentral()

    maven {
        url  "http://dl.bintray.com/julianghionoiu/maven"
        url 'https://plugins.gradle.org/m2/'
    }
}

dependencies {
    implementation 'ro.ghionoiu:tdl-client-java:0.26.1'
    implementation 'com.mashape.unirest:unirest-java:1.4.9'
    implementation 'com.google.guava:guava:18.0'
    
    testImplementation ('org.mockito:mockito-core:1.10.19') {
        exclude module : 'hamcrest-core'
    }
    testImplementation 'org.hamcrest:hamcrest-all:1.3'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // Required for logger generation 
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
}

// Making the app runnable

apply plugin: 'application'

mainClassName = 'befaster.SendCommandToServer'

run {
    standardInput = System.in

    def action = System.getProperty('action')
    def actions = (action == null) ? [] : [ action ]
    //noinspection GroovyAssignabilityCheck
    args(actions)
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

test {
    ignoreFailures = false
    jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
    }
}

jacocoTestReport {
    reports {
        //noinspection GroovyAssignabilityCheck
        xml.enabled true
        html.destination file("${buildDir}/jacocoHtml")
    }
}
